["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$hljs",["^ ","~$highlight",["^ "]],"~$console",["^ ","~$group",["^ "],"~$log",["^ "],"~$groupEnd",["^ "],"~$info",["^ "],"~$error",["^ "]],"~$Error",["^ "],"~$Object",["^ ","~$setAttribute",["^ "],"~$value",["^ "]],"~$ReactDOM",["^ ","~$render",["^ "],"~$unmountComponentAtNode",["^ "]],"~$window",["^ ","~$requestAnimationFrame",["^ "]],"~$document",["^ ","~$getElementById",["^ "],"~$createElement",["^ "],"~$body",["^ ","~$appendChild",["^ "]]],"~$React",["^ ","^F",["^ ","~$apply",["^ "]],"~$Component",["^ ","~$call",["^ "]]],"~$RegExp",["^ "],"~$Date",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$klang.core","~:imports",["^ ","~$KeyboardShortcutHandler","~$goog.ui.KeyboardShortcutHandler"],"~:requires",["^ ","~$gevents","~$goog.events","^U","^V","~$gstring","~$goog.string","~$gstyle","~$goog.style","^[","^[","~$gobj","~$goog.object","^13","^13","~$cljsjs.highlight.langs.clojure","^14","~$cljsjs.highlight","^15","~$goog.string.format","^16","^11","^11","^Y","^Y"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$severity->color",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","~:line",216,"~:column",7,"~:end-line",216,"~:end-column",22,"~:arglists",["~#list",["~$quote",["^1C",[["~$severity"]]]]],"~:doc","Returns a color for the given severity\n   http://www.w3schools.com/cssref/css_colornames.asp"],"^R","~$klang.core/severity->color","~:variadic",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",22,"~:method-params",["^1C",[["^1E"]]],"~:protocol-impl",null,"~:arglists-meta",["^1C",[null,null]],"^1?",1,"^1>",216,"^1@",216,"~:max-fixed-arity",1,"~:fn-var",true,"^1B",["^1C",["^1D",["^1C",[["^1E"]]]]],"^1F","Returns a color for the given severity\n   http://www.w3schools.com/cssref/css_colornames.asp"],"~$mount",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",118,"^1?",7,"^1@",118,"^1A",12,"^1B",["^1C",["^1D",["^1C",[["~$component","~$node"]]]]],"^1F","Add component to the DOM tree. Idempotent. Subsequent mounts will just update component"],"^R","~$klang.core/mount","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",12,"^1I",["^1C",[["^1O","^1P"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",118,"^1@",118,"^1L",2,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^1O","^1P"]]]]],"^1F","Add component to the DOM tree. Idempotent. Subsequent mounts will just update component"],"~$css-molokai",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",356,"^1?",7,"^1@",356,"^1A",18,"^1B",["^1C",["^1D",["^1C",[[]]]]]],"^R","~$klang.core/css-molokai","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",18,"^1I",["^1C",[[]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",356,"^1@",356,"^1L",0,"^1M",true,"^1B",["^1C",["^1D",["^1C",[[]]]]]],"~$unmount",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",123,"^1?",7,"^1@",123,"^1A",14,"^1B",["^1C",["^1D",["^1C",[["^1P"]]]]],"^1F","Removes component from the DOM tree"],"^R","~$klang.core/unmount","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",14,"^1I",["^1C",[["^1P"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",123,"^1@",123,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^1P"]]]]],"^1F","Removes component from the DOM tree"],"~$show!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",144,"^1?",7,"^1@",144,"^1A",12,"^1B",["^1C",["^1D",["^1C",[[],["~$tf"]]]]],"^1F","Makes the overlay show/hide. Toggle on no param","~:top-fn",["^ ","^1H",false,"^1L",1,"^1I",["^1C",[[],["^1W"]]],"^1B",["^1C",[[],["^1W"]]],"^1K",["^1C",[null,null]]]],"^R","~$klang.core/show!","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",12,"^1X",["^ ","^1H",false,"^1L",1,"^1I",["^1C",[[],["^1W"]]],"^1B",["^1C",[[],["^1W"]]],"^1K",["^1C",[null,null]]],"^1I",["^1C",[[],["^1W"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",144,"^1@",144,"^1L",1,"^1M",true,"^1B",["^1C",[[],["^1W"]]],"^1F","Makes the overlay show/hide. Toggle on no param"],"~$!!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",33,"^1?",7,"^1@",33,"^1A",9,"^1B",["^1C",["^1D",["^1C",[["~$&","~$args"]]]]],"^1X",["^ ","^1H",true,"^1L",0,"^1I",[["^1C",["^1["]]],"^1B",["^1C",[["~$&","^1["]]],"^1K",["^1C",[null]]]],"^R","~$klang.core/!!","^1H",true,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",9,"^1X",["^ ","^1H",true,"^1L",0,"^1I",[["^1C",["^1["]]],"^1B",["^1C",[["~$&","^1["]]],"^1K",["^1C",[null]]],"^1I",[["^1C",["^1["]]],"^1J",null,"^1K",["^1C",[null]],"^1?",1,"^1>",33,"^1@",33,"^1L",0,"^1M",true,"^1B",["^1C",[["~$&","^1["]]]],"~$possibly-set-lifecycle!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",62,"^1?",7,"^1@",62,"^1A",30,"^1B",["^1C",["^1D",["^1C",[["~$spec","~$name","~$f"]]]]],"^1F","This is all done for performance... Smaller and more used functions can easier get optimized."],"^R","~$klang.core/possibly-set-lifecycle!","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",30,"^1I",["^1C",[["^22","^23","~$f"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",62,"^1@",62,"^1L",3,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^22","^23","~$f"]]]]],"^1F","This is all done for performance... Smaller and more used functions can easier get optimized."],"~$gens",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",130,"^1?",7,"^1@",130,"^1A",11,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Generates a new log id."],"^R","~$klang.core/gens","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",11,"^1I",["^1C",[[]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",130,"^1@",130,"^1L",0,"^1M",true,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Generates a new log id."],"~$self-or-parent?",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",157,"^1?",7,"^1@",157,"^1A",22,"^1B",["^1C",["^1D",["^1C",[["~$p","~$c"]]]]],"^1F","Return true if the namespace p==c or p is a parent of c. Expects two string"],"^R","~$klang.core/self-or-parent?","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",22,"^1I",["^1C",[["~$p","~$c"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",157,"^1@",157,"^1L",2,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["~$p","~$c"]]]]],"^1F","Return true if the namespace p==c or p is a parent of c. Expects two string"],"~$parent?",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",151,"^1?",7,"^1@",151,"^1A",14,"^1B",["^1C",["^1D",["^1C",[["~$p","~$c"]]]]],"^1F","Return true if the namespace p is a parent of c. Expects two string"],"^R","~$klang.core/parent?","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",14,"^1I",["^1C",[["~$p","~$c"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",151,"^1@",151,"^1L",2,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["~$p","~$c"]]]]],"^1F","Return true if the namespace p is a parent of c. Expects two string"],"~$msg->str",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",238,"^1?",7,"^1@",238,"^1A",15,"^1B",["^1C",["^1D",["^1C",[["~$msg"]]]]],"^1F","Converts a message to a string."],"^R","~$klang.core/msg->str","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",15,"^1I",["^1C",[["^2<"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",238,"^1@",238,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2<"]]]]],"^1F","Converts a message to a string."],"~$render-logs",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",292,"^1?",7,"^1@",292,"^1A",18,"^1B",["^1C",["^1D",["^1C",[["~$logs"]]]]],"^1F","Renders an array of log messages."],"^R","~$klang.core/render-logs","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",18,"^1I",["^1C",[["^2?"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",292,"^1@",292,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2?"]]]]],"^1F","Renders an array of log messages."],"~$render-overlay",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",316,"^1?",8,"^1@",316,"^1A",22,"~:private",true,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Renders the entire log message overlay in a div when :showing? is true."],"^2B",true,"^R","~$klang.core/render-overlay","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",22,"^1I",["^1C",[[]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",316,"^1@",316,"^1L",0,"^1M",true,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Renders the entire log message overlay in a div when :showing? is true."],"~$dump-to-console!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",170,"^1?",7,"^1@",170,"^1A",23,"^1B",["^1C",["^1D",["^1C",[["~$lg-ev"]]]]],"^1F","Takes a log event and dumps all kinds of info about it to the developer\n  console. Works under chrome. Probably also under firefox."],"^R","~$klang.core/dump-to-console!","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",23,"^1I",["^1C",[["^2E"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",170,"^1@",170,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2E"]]]]],"^1F","Takes a log event and dumps all kinds of info about it to the developer\n  console. Works under chrome. Probably also under firefox."],"~$search-filter-fn",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",267,"^1?",7,"^1@",267,"^1A",23,"^1B",["^1C",["^1D",["^1C",[["~$search"]]]]],"^1F","Returns a transducer that filters given the log messages according to the\n  search term given in the database for the current active tab.\n  Does a full text search on time, namespace, type and message.\n  The format is like:\n  11:28:27.793 my.ns/INFO [\"Log msg 0\"]"],"^R","~$klang.core/search-filter-fn","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",23,"^1I",["^1C",[["^2H"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",267,"^1@",267,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2H"]]]]],"^1F","Returns a transducer that filters given the log messages according to the\n  search term given in the database for the current active tab.\n  Does a full text search on time, namespace, type and message.\n  The format is like:\n  11:28:27.793 my.ns/INFO [\"Log msg 0\"]"],"~$db",["^ ","^R","~$klang.core/db","^1=","../../../dist/js/compiled/out/klang/core.cljs","^1>",27,"^1?",1,"^1@",27,"^1A",12,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",27,"^1?",10,"^1@",27,"^1A",12],"~:tag","~$any"],"~$scheduled?",["^ ","^R","~$klang.core/scheduled?","^1=","../../../dist/js/compiled/out/klang/core.cljs","^1>",439,"^1?",1,"^1@",439,"^1A",16,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",439,"^1?",6,"^1@",439,"^1A",16],"^2L","~$boolean"],"~$render-log-event",["^ ","^R","~$klang.core/render-log-event","^1=","../../../dist/js/compiled/out/klang/core.cljs","^1>",249,"^1?",1,"^1@",249,"^1A",22,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",249,"^1?",6,"^1@",249,"^1A",22],"^1F","Renders a single log message.","^2L","^2M"],"~$ensure-klang-init",["^ ","^R","~$klang.core/ensure-klang-init","^1=","../../../dist/js/compiled/out/klang/core.cljs","^1>",451,"^1?",1,"^1@",451,"^1A",23,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",451,"^1?",6,"^1@",451,"^1A",23],"^1F","This will get DCE'd!","^2L","~$cljs.core/Delay"],"~$render-msg",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",245,"^1?",7,"^1@",245,"^1A",17,"^1B",["^1C",["^1D",["^1C",[["^2<"]]]]]],"^R","~$klang.core/render-msg","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",17,"^1I",["^1C",[["^2<"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",245,"^1@",245,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2<"]]]]]],"~$set-max-logs!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",427,"^1?",7,"^1@",427,"^1A",20,"^1B",["^1C",["^1D",["^1C",[["~$n"]]]]],"^1F","Only keep the last n logs. If nil: No truncating."],"^R","~$klang.core/set-max-logs!","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",20,"^1I",["^1C",[["~$n"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",427,"^1@",427,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["~$n"]]]]],"^1F","Only keep the last n logs. If nil: No truncating."],"~$add-array",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",50,"^1?",7,"^1@",50,"^1A",16,"^1B",["^1C",["^1D",["^1C",[["~$ary","~$xs"]]]]]],"^R","~$klang.core/add-array","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",16,"^1I",["^1C",[["^2[","^30"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",50,"^1@",50,"^1L",2,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2[","^30"]]]]]],"~$toggle-freeze",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",136,"^1?",7,"^1@",136,"^1A",20,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Freezes the UI. Toggle on no param"],"^R","~$klang.core/toggle-freeze","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",20,"^1I",["^1C",[[]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",136,"^1@",136,"^1L",0,"^1M",true,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Freezes the UI. Toggle on no param"],"^1O",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",107,"^1?",7,"^1@",107,"^1A",16,"^1B",["^1C",["^1D",["^1C",[["~$lcm","^@"]]]]]],"^R","~$klang.core/component","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",16,"^1I",["^1C",[["^34","^@"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",107,"^1@",107,"^1L",2,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^34","^@"]]]]]],"~$clear!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",483,"^1?",7,"^1@",483,"^1A",13,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Clears all logs"],"^R","~$klang.core/clear!","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",13,"^1I",["^1C",[[]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",483,"^1@",483,"^1L",0,"^1M",true,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Clears all logs"],"~$request-rerender!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",441,"^1?",7,"^1@",441,"^1A",24,"^1B",["^1C",["^1D",["^1C",[[]]]]]],"^R","~$klang.core/request-rerender!","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",24,"^1I",["^1C",[[]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",441,"^1@",441,"^1L",0,"^1M",true,"^1B",["^1C",["^1D",["^1C",[[]]]]]],"~$format-time",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",163,"^1?",7,"^1@",163,"^1A",18,"^1B",["^1C",["^1D",["^1C",[["~$d"]]]]]],"^R","~$klang.core/format-time","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",18,"^1I",["^1C",[["~$d"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",163,"^1@",163,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["~$d"]]]]]],"~$add-log!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",461,"^1?",7,"^1@",461,"^1A",15,"^1B",["^1C",["^1D",["^1C",[["~$ns","^1E","~$msg0","~$&","^2<"]]]]],"^1F","This is the main log functions:\n  - ns - string\n  - severity - string, like \"INFO\" or \"WARN\"\n  - msg0 - If the map {::meta-data {...}} attaches this to the msg\n    Otherwise the first message","^1X",["^ ","^1H",true,"^1L",3,"^1I",[["^1C",["^3=","^1E","^3>","^2<"]]],"^1B",["^1C",[["^3=","^1E","^3>","~$&","^2<"]]],"^1K",["^1C",[null]]]],"^R","~$klang.core/add-log!","^1H",true,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",15,"^1X",["^ ","^1H",true,"^1L",3,"^1I",[["^1C",["^3=","^1E","^3>","^2<"]]],"^1B",["^1C",[["^3=","^1E","^3>","~$&","^2<"]]],"^1K",["^1C",[null]]],"^1I",[["^1C",["^3=","^1E","^3>","^2<"]]],"^1J",null,"^1K",["^1C",[null]],"^1?",1,"^1>",461,"^1@",461,"^1L",3,"^1M",true,"^1B",["^1C",[["^3=","^1E","^3>","~$&","^2<"]]],"^1F","This is the main log functions:\n  - ns - string\n  - severity - string, like \"INFO\" or \"WARN\"\n  - msg0 - If the map {::meta-data {...}} attaches this to the msg\n    Otherwise the first message"],"~$dom-el",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",39,"^1?",7,"^1@",39,"^1A",13,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Ensures there is a div element in the body and returns it."],"^R","~$klang.core/dom-el","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",13,"^1I",["^1C",[[]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",39,"^1@",39,"^1L",0,"^1M",true,"^1B",["^1C",["^1D",["^1C",[[]]]]],"^1F","Ensures there is a div element in the body and returns it."],"~$id-counter",["^ ","^R","~$klang.core/id-counter","^1=","../../../dist/js/compiled/out/klang/core.cljs","^1>",129,"^1?",1,"^1@",129,"^1A",20,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",129,"^1?",10,"^1@",129,"^1A",20],"^2L","~$number"],"~$hl-clj-str",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",230,"^1?",7,"^1@",230,"^1A",17,"^1B",["^1C",["^1D",["^1C",[["^2<"]]]]],"^1F","Returns a string containing HTML that highlights the message. Takes a string\n  of clojure syntax. Such as map, set etc.\n  Ex:\n  (hl-clj-str \"{:foo :bar}\")"],"^R","~$klang.core/hl-clj-str","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",17,"^1I",["^1C",[["^2<"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",230,"^1@",230,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2<"]]]]],"^1F","Returns a string containing HTML that highlights the message. Takes a string\n  of clojure syntax. Such as map, set etc.\n  Ex:\n  (hl-clj-str \"{:foo :bar}\")"],"~$h",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",56,"^1?",7,"^1@",56,"^1A",8,"^1B",["^1C",["^1D",["^1C",[["~$tag","~$props","~$&","~$children"]]]]],"^1F","Helper for creating dom elements.","^1X",["^ ","^1H",true,"^1L",2,"^1I",[["^1C",["^3G","^3H","^3I"]]],"^1B",["^1C",[["^3G","^3H","~$&","^3I"]]],"^1K",["^1C",[null]]]],"^R","~$klang.core/h","^1H",true,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",8,"^1X",["^ ","^1H",true,"^1L",2,"^1I",[["^1C",["^3G","^3H","^3I"]]],"^1B",["^1C",[["^3G","^3H","~$&","^3I"]]],"^1K",["^1C",[null]]],"^1I",[["^1C",["^3G","^3H","^3I"]]],"^1J",null,"^1K",["^1C",[null]],"^1?",1,"^1>",56,"^1@",56,"^1L",2,"^1M",true,"^1B",["^1C",[["^3G","^3H","~$&","^3I"]]],"^1F","Helper for creating dom elements."],"~$build-class",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",69,"^1?",7,"^1@",69,"^1A",18,"^1B",["^1C",["^1D",["^1C",[["^@","^34"]]]]],"^1F","The render function will always be called with 1 arg, the rum state.\n   It should return [dom rum-state]."],"^R","~$klang.core/build-class","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",18,"^1I",["^1C",[["^@","^34"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",69,"^1@",69,"^1L",2,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^@","^34"]]]]],"^1F","The render function will always be called with 1 arg, the rum state.\n   It should return [dom rum-state]."],"~$possibly-truncate",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",432,"^1?",7,"^1@",432,"^1A",24,"^1B",["^1C",["^1D",["^1C",[["^2J"]]]]]],"^R","~$klang.core/possibly-truncate","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",24,"^1I",["^1C",[["^2J"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",432,"^1@",432,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^2J"]]]]]],"~$rAF",["^ ","^R","~$klang.core/rAF","^1=","../../../dist/js/compiled/out/klang/core.cljs","^1>",438,"^1?",1,"^1@",438,"^1A",17,"~:const",true,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",438,"^1?",14,"^1@",438,"^1A",17,"^3Q",true],"^2L","~$js"],"~$install-shortcut!",["^ ","^1;",null,"^1<",["^ ","^1=","/Users/tjscollins/Documents/cnmipss-main/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1>",411,"^1?",7,"^1@",411,"^1A",24,"^1B",["^1C",["^1D",["^1C",[["~$shortcut"]]]]],"^1F","Installs a Keyboard Shortcut handler that show/hide the log overlay.\n   Call the return function to unregister."],"^R","~$klang.core/install-shortcut!","^1H",false,"^1=","../../../dist/js/compiled/out/klang/core.cljs","^1A",24,"^1I",["^1C",[["^3T"]]],"^1J",null,"^1K",["^1C",[null,null]],"^1?",1,"^1>",411,"^1@",411,"^1L",1,"^1M",true,"^1B",["^1C",["^1D",["^1C",[["^3T"]]]]],"^1F","Installs a Keyboard Shortcut handler that show/hide the log overlay.\n   Call the return function to unregister."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^Q",["^1<","~:frozen-at","~:klang.core/meta-data","~:shortcut-keys","~:logs","~:ns","~:trace","~:time","^1=","~:max-logs","~:msg","~:type","~:env","~:search","~:showing?","^1>","~:id","~:rerender"]],"~:order",["^4:","^45","^49","^41","^3Z","^42","^47","^1>","^1<","^44","^1=","^43","^48","^46","^4;","^40","^4<","^3["]],"^1F","\n   # TODO:\n   Also highlight all namespaces with a smart method?\n   For instance all parents vs childs have stronger colors...\n   How to define a tree of colors such that they're similar yet different?\n   Sounds like a coloring problem??\n   Actually sounds more like locality sensitve hashing algorithm!\n   Easiest LSH:\n   Just explode each '.' and project it into some numbers.\n   Actually probably a weighted projection that gives more weights to the\n   leftmost parts of the namespace.\n   What color space to use?\n\n   Note: Some of the code here is written like this to get get 100% DCE'd"]