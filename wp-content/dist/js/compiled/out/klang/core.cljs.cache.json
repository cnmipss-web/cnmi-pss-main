["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$hljs",["^ ","~$highlight",["^ "]],"~$console",["^ ","~$group",["^ "],"~$log",["^ "],"~$groupEnd",["^ "],"~$info",["^ "],"~$error",["^ "]],"~$Error",["^ "],"~$Object",["^ ","~$setAttribute",["^ "],"~$value",["^ "]],"~$ReactDOM",["^ ","~$render",["^ "],"~$unmountComponentAtNode",["^ "]],"~$window",["^ ","~$requestAnimationFrame",["^ "]],"~$document",["^ ","~$getElementById",["^ "],"~$createElement",["^ "],"~$body",["^ ","~$appendChild",["^ "]]],"~$React",["^ ","^F",["^ ","~$apply",["^ "]],"~$Component",["^ ","~$call",["^ "]]],"~$RegExp",["^ "],"~$Date",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$klang.core","~:imports",["^ ","~$KeyboardShortcutHandler","~$goog.ui.KeyboardShortcutHandler"],"~:requires",["^ ","~$gevents","~$goog.events","^U","^V","~$gstring","~$goog.string","~$gstyle","~$goog.style","^[","^[","~$gobj","~$goog.object","^13","^13","~$cljsjs.highlight.langs.clojure","^14","~$cljsjs.highlight","^15","~$goog.string.format","^16","^11","^11","^Y","^Y"],"~:uses",null,"~:defs",["^ ","~$severity->color",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","~:line",216,"~:column",7,"~:end-line",216,"~:end-column",22,"~:arglists",["~#list",["~$quote",["^1B",[["~$severity"]]]]],"~:doc","Returns a color for the given severity\n   http://www.w3schools.com/cssref/css_colornames.asp"],"^R","~$klang.core/severity->color","~:variadic",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",22,"~:method-params",["^1B",[["^1D"]]],"~:protocol-impl",null,"~:arglists-meta",["^1B",[null,null]],"^1>",1,"^1=",216,"^1?",216,"~:max-fixed-arity",1,"~:fn-var",true,"^1A",["^1B",["^1C",["^1B",[["^1D"]]]]],"^1E","Returns a color for the given severity\n   http://www.w3schools.com/cssref/css_colornames.asp"],"~$mount",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",118,"^1>",7,"^1?",118,"^1@",12,"^1A",["^1B",["^1C",["^1B",[["~$component","~$node"]]]]],"^1E","Add component to the DOM tree. Idempotent. Subsequent mounts will just update component"],"^R","~$klang.core/mount","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",12,"^1H",["^1B",[["^1N","^1O"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",118,"^1?",118,"^1K",2,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^1N","^1O"]]]]],"^1E","Add component to the DOM tree. Idempotent. Subsequent mounts will just update component"],"~$css-molokai",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",356,"^1>",7,"^1?",356,"^1@",18,"^1A",["^1B",["^1C",["^1B",[[]]]]]],"^R","~$klang.core/css-molokai","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",18,"^1H",["^1B",[[]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",356,"^1?",356,"^1K",0,"^1L",true,"^1A",["^1B",["^1C",["^1B",[[]]]]]],"~$unmount",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",123,"^1>",7,"^1?",123,"^1@",14,"^1A",["^1B",["^1C",["^1B",[["^1O"]]]]],"^1E","Removes component from the DOM tree"],"^R","~$klang.core/unmount","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",14,"^1H",["^1B",[["^1O"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",123,"^1?",123,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^1O"]]]]],"^1E","Removes component from the DOM tree"],"~$show!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",144,"^1>",7,"^1?",144,"^1@",12,"^1A",["^1B",["^1C",["^1B",[[],["~$tf"]]]]],"^1E","Makes the overlay show/hide. Toggle on no param","~:top-fn",["^ ","^1G",false,"^1K",1,"^1H",["^1B",[[],["^1V"]]],"^1A",["^1B",[[],["^1V"]]],"^1J",["^1B",[null,null]]]],"^R","~$klang.core/show!","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",12,"^1W",["^ ","^1G",false,"^1K",1,"^1H",["^1B",[[],["^1V"]]],"^1A",["^1B",[[],["^1V"]]],"^1J",["^1B",[null,null]]],"^1H",["^1B",[[],["^1V"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",144,"^1?",144,"^1K",1,"^1L",true,"^1A",["^1B",[[],["^1V"]]],"^1E","Makes the overlay show/hide. Toggle on no param"],"~$!!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",33,"^1>",7,"^1?",33,"^1@",9,"^1A",["^1B",["^1C",["^1B",[["~$&","~$args"]]]]],"^1W",["^ ","^1G",true,"^1K",0,"^1H",[["^1B",["^1Z"]]],"^1A",["^1B",[["~$&","^1Z"]]],"^1J",["^1B",[null]]]],"^R","~$klang.core/!!","^1G",true,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",9,"^1W",["^ ","^1G",true,"^1K",0,"^1H",[["^1B",["^1Z"]]],"^1A",["^1B",[["~$&","^1Z"]]],"^1J",["^1B",[null]]],"^1H",[["^1B",["^1Z"]]],"^1I",null,"^1J",["^1B",[null]],"^1>",1,"^1=",33,"^1?",33,"^1K",0,"^1L",true,"^1A",["^1B",[["~$&","^1Z"]]]],"~$possibly-set-lifecycle!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",62,"^1>",7,"^1?",62,"^1@",30,"^1A",["^1B",["^1C",["^1B",[["~$spec","~$name","~$f"]]]]],"^1E","This is all done for performance... Smaller and more used functions can easier get optimized."],"^R","~$klang.core/possibly-set-lifecycle!","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",30,"^1H",["^1B",[["^21","^22","~$f"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",62,"^1?",62,"^1K",3,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^21","^22","~$f"]]]]],"^1E","This is all done for performance... Smaller and more used functions can easier get optimized."],"~$gens",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",130,"^1>",7,"^1?",130,"^1@",11,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Generates a new log id."],"^R","~$klang.core/gens","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",11,"^1H",["^1B",[[]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",130,"^1?",130,"^1K",0,"^1L",true,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Generates a new log id."],"~$self-or-parent?",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",157,"^1>",7,"^1?",157,"^1@",22,"^1A",["^1B",["^1C",["^1B",[["~$p","~$c"]]]]],"^1E","Return true if the namespace p==c or p is a parent of c. Expects two string"],"^R","~$klang.core/self-or-parent?","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",22,"^1H",["^1B",[["~$p","~$c"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",157,"^1?",157,"^1K",2,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["~$p","~$c"]]]]],"^1E","Return true if the namespace p==c or p is a parent of c. Expects two string"],"~$parent?",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",151,"^1>",7,"^1?",151,"^1@",14,"^1A",["^1B",["^1C",["^1B",[["~$p","~$c"]]]]],"^1E","Return true if the namespace p is a parent of c. Expects two string"],"^R","~$klang.core/parent?","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",14,"^1H",["^1B",[["~$p","~$c"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",151,"^1?",151,"^1K",2,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["~$p","~$c"]]]]],"^1E","Return true if the namespace p is a parent of c. Expects two string"],"~$msg->str",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",238,"^1>",7,"^1?",238,"^1@",15,"^1A",["^1B",["^1C",["^1B",[["~$msg"]]]]],"^1E","Converts a message to a string."],"^R","~$klang.core/msg->str","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",15,"^1H",["^1B",[["^2;"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",238,"^1?",238,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2;"]]]]],"^1E","Converts a message to a string."],"~$render-logs",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",292,"^1>",7,"^1?",292,"^1@",18,"^1A",["^1B",["^1C",["^1B",[["~$logs"]]]]],"^1E","Renders an array of log messages."],"^R","~$klang.core/render-logs","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",18,"^1H",["^1B",[["^2>"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",292,"^1?",292,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2>"]]]]],"^1E","Renders an array of log messages."],"~$render-overlay",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",316,"^1>",8,"^1?",316,"^1@",22,"~:private",true,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Renders the entire log message overlay in a div when :showing? is true."],"^2A",true,"^R","~$klang.core/render-overlay","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",22,"^1H",["^1B",[[]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",316,"^1?",316,"^1K",0,"^1L",true,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Renders the entire log message overlay in a div when :showing? is true."],"~$dump-to-console!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",170,"^1>",7,"^1?",170,"^1@",23,"^1A",["^1B",["^1C",["^1B",[["~$lg-ev"]]]]],"^1E","Takes a log event and dumps all kinds of info about it to the developer\n  console. Works under chrome. Probably also under firefox."],"^R","~$klang.core/dump-to-console!","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",23,"^1H",["^1B",[["^2D"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",170,"^1?",170,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2D"]]]]],"^1E","Takes a log event and dumps all kinds of info about it to the developer\n  console. Works under chrome. Probably also under firefox."],"~$search-filter-fn",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",267,"^1>",7,"^1?",267,"^1@",23,"^1A",["^1B",["^1C",["^1B",[["~$search"]]]]],"^1E","Returns a transducer that filters given the log messages according to the\n  search term given in the database for the current active tab.\n  Does a full text search on time, namespace, type and message.\n  The format is like:\n  11:28:27.793 my.ns/INFO [\"Log msg 0\"]"],"^R","~$klang.core/search-filter-fn","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",23,"^1H",["^1B",[["^2G"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",267,"^1?",267,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2G"]]]]],"^1E","Returns a transducer that filters given the log messages according to the\n  search term given in the database for the current active tab.\n  Does a full text search on time, namespace, type and message.\n  The format is like:\n  11:28:27.793 my.ns/INFO [\"Log msg 0\"]"],"~$db",["^ ","^R","~$klang.core/db","^1<","../../../dist/js/compiled/out/klang/core.cljs","^1=",27,"^1>",1,"^1?",27,"^1@",12,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",27,"^1>",10,"^1?",27,"^1@",12],"~:tag","~$any"],"~$scheduled?",["^ ","^R","~$klang.core/scheduled?","^1<","../../../dist/js/compiled/out/klang/core.cljs","^1=",439,"^1>",1,"^1?",439,"^1@",16,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",439,"^1>",6,"^1?",439,"^1@",16],"^2K","~$boolean"],"~$render-log-event",["^ ","^R","~$klang.core/render-log-event","^1<","../../../dist/js/compiled/out/klang/core.cljs","^1=",249,"^1>",1,"^1?",249,"^1@",22,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",249,"^1>",6,"^1?",249,"^1@",22],"^1E","Renders a single log message.","^2K","^2L"],"~$ensure-klang-init",["^ ","^R","~$klang.core/ensure-klang-init","^1<","../../../dist/js/compiled/out/klang/core.cljs","^1=",451,"^1>",1,"^1?",451,"^1@",23,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",451,"^1>",6,"^1?",451,"^1@",23],"^1E","This will get DCE'd!","^2K","~$cljs.core/Delay"],"~$render-msg",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",245,"^1>",7,"^1?",245,"^1@",17,"^1A",["^1B",["^1C",["^1B",[["^2;"]]]]]],"^R","~$klang.core/render-msg","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",17,"^1H",["^1B",[["^2;"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",245,"^1?",245,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2;"]]]]]],"~$set-max-logs!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",427,"^1>",7,"^1?",427,"^1@",20,"^1A",["^1B",["^1C",["^1B",[["~$n"]]]]],"^1E","Only keep the last n logs. If nil: No truncating."],"^R","~$klang.core/set-max-logs!","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",20,"^1H",["^1B",[["~$n"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",427,"^1?",427,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["~$n"]]]]],"^1E","Only keep the last n logs. If nil: No truncating."],"~$add-array",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",50,"^1>",7,"^1?",50,"^1@",16,"^1A",["^1B",["^1C",["^1B",[["~$ary","~$xs"]]]]]],"^R","~$klang.core/add-array","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",16,"^1H",["^1B",[["^2Z","^2["]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",50,"^1?",50,"^1K",2,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2Z","^2["]]]]]],"~$toggle-freeze",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",136,"^1>",7,"^1?",136,"^1@",20,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Freezes the UI. Toggle on no param"],"^R","~$klang.core/toggle-freeze","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",20,"^1H",["^1B",[[]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",136,"^1?",136,"^1K",0,"^1L",true,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Freezes the UI. Toggle on no param"],"^1N",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",107,"^1>",7,"^1?",107,"^1@",16,"^1A",["^1B",["^1C",["^1B",[["~$lcm","^@"]]]]]],"^R","~$klang.core/component","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",16,"^1H",["^1B",[["^33","^@"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",107,"^1?",107,"^1K",2,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^33","^@"]]]]]],"~$clear!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",483,"^1>",7,"^1?",483,"^1@",13,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Clears all logs"],"^R","~$klang.core/clear!","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",13,"^1H",["^1B",[[]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",483,"^1?",483,"^1K",0,"^1L",true,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Clears all logs"],"~$request-rerender!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",441,"^1>",7,"^1?",441,"^1@",24,"^1A",["^1B",["^1C",["^1B",[[]]]]]],"^R","~$klang.core/request-rerender!","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",24,"^1H",["^1B",[[]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",441,"^1?",441,"^1K",0,"^1L",true,"^1A",["^1B",["^1C",["^1B",[[]]]]]],"~$format-time",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",163,"^1>",7,"^1?",163,"^1@",18,"^1A",["^1B",["^1C",["^1B",[["~$d"]]]]]],"^R","~$klang.core/format-time","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",18,"^1H",["^1B",[["~$d"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",163,"^1?",163,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["~$d"]]]]]],"~$add-log!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",461,"^1>",7,"^1?",461,"^1@",15,"^1A",["^1B",["^1C",["^1B",[["~$ns","^1D","~$msg0","~$&","^2;"]]]]],"^1E","This is the main log functions:\n  - ns - string\n  - severity - string, like \"INFO\" or \"WARN\"\n  - msg0 - If the map {::meta-data {...}} attaches this to the msg\n    Otherwise the first message","^1W",["^ ","^1G",true,"^1K",3,"^1H",[["^1B",["^3<","^1D","^3=","^2;"]]],"^1A",["^1B",[["^3<","^1D","^3=","~$&","^2;"]]],"^1J",["^1B",[null]]]],"^R","~$klang.core/add-log!","^1G",true,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",15,"^1W",["^ ","^1G",true,"^1K",3,"^1H",[["^1B",["^3<","^1D","^3=","^2;"]]],"^1A",["^1B",[["^3<","^1D","^3=","~$&","^2;"]]],"^1J",["^1B",[null]]],"^1H",[["^1B",["^3<","^1D","^3=","^2;"]]],"^1I",null,"^1J",["^1B",[null]],"^1>",1,"^1=",461,"^1?",461,"^1K",3,"^1L",true,"^1A",["^1B",[["^3<","^1D","^3=","~$&","^2;"]]],"^1E","This is the main log functions:\n  - ns - string\n  - severity - string, like \"INFO\" or \"WARN\"\n  - msg0 - If the map {::meta-data {...}} attaches this to the msg\n    Otherwise the first message"],"~$dom-el",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",39,"^1>",7,"^1?",39,"^1@",13,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Ensures there is a div element in the body and returns it."],"^R","~$klang.core/dom-el","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",13,"^1H",["^1B",[[]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",39,"^1?",39,"^1K",0,"^1L",true,"^1A",["^1B",["^1C",["^1B",[[]]]]],"^1E","Ensures there is a div element in the body and returns it."],"~$id-counter",["^ ","^R","~$klang.core/id-counter","^1<","../../../dist/js/compiled/out/klang/core.cljs","^1=",129,"^1>",1,"^1?",129,"^1@",20,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",129,"^1>",10,"^1?",129,"^1@",20],"^2K","~$number"],"~$hl-clj-str",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",230,"^1>",7,"^1?",230,"^1@",17,"^1A",["^1B",["^1C",["^1B",[["^2;"]]]]],"^1E","Returns a string containing HTML that highlights the message. Takes a string\n  of clojure syntax. Such as map, set etc.\n  Ex:\n  (hl-clj-str \"{:foo :bar}\")"],"^R","~$klang.core/hl-clj-str","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",17,"^1H",["^1B",[["^2;"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",230,"^1?",230,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2;"]]]]],"^1E","Returns a string containing HTML that highlights the message. Takes a string\n  of clojure syntax. Such as map, set etc.\n  Ex:\n  (hl-clj-str \"{:foo :bar}\")"],"~$h",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",56,"^1>",7,"^1?",56,"^1@",8,"^1A",["^1B",["^1C",["^1B",[["~$tag","~$props","~$&","~$children"]]]]],"^1E","Helper for creating dom elements.","^1W",["^ ","^1G",true,"^1K",2,"^1H",[["^1B",["^3F","^3G","^3H"]]],"^1A",["^1B",[["^3F","^3G","~$&","^3H"]]],"^1J",["^1B",[null]]]],"^R","~$klang.core/h","^1G",true,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",8,"^1W",["^ ","^1G",true,"^1K",2,"^1H",[["^1B",["^3F","^3G","^3H"]]],"^1A",["^1B",[["^3F","^3G","~$&","^3H"]]],"^1J",["^1B",[null]]],"^1H",[["^1B",["^3F","^3G","^3H"]]],"^1I",null,"^1J",["^1B",[null]],"^1>",1,"^1=",56,"^1?",56,"^1K",2,"^1L",true,"^1A",["^1B",[["^3F","^3G","~$&","^3H"]]],"^1E","Helper for creating dom elements."],"~$build-class",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",69,"^1>",7,"^1?",69,"^1@",18,"^1A",["^1B",["^1C",["^1B",[["^@","^33"]]]]],"^1E","The render function will always be called with 1 arg, the rum state.\n   It should return [dom rum-state]."],"^R","~$klang.core/build-class","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",18,"^1H",["^1B",[["^@","^33"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",69,"^1?",69,"^1K",2,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^@","^33"]]]]],"^1E","The render function will always be called with 1 arg, the rum state.\n   It should return [dom rum-state]."],"~$possibly-truncate",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",432,"^1>",7,"^1?",432,"^1@",24,"^1A",["^1B",["^1C",["^1B",[["^2I"]]]]]],"^R","~$klang.core/possibly-truncate","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",24,"^1H",["^1B",[["^2I"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",432,"^1?",432,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^2I"]]]]]],"~$rAF",["^ ","^R","~$klang.core/rAF","^1<","../../../dist/js/compiled/out/klang/core.cljs","^1=",438,"^1>",1,"^1?",438,"^1@",17,"~:const",true,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",438,"^1>",14,"^1?",438,"^1@",17,"^3P",true],"^2K","~$js"],"~$install-shortcut!",["^ ","^1:",null,"^1;",["^ ","^1<","/home/tjscollins/public_html/wp-content/src/cljs/cnmipss/../../../dist/js/compiled/out/klang/core.cljs","^1=",411,"^1>",7,"^1?",411,"^1@",24,"^1A",["^1B",["^1C",["^1B",[["~$shortcut"]]]]],"^1E","Installs a Keyboard Shortcut handler that show/hide the log overlay.\n   Call the return function to unregister."],"^R","~$klang.core/install-shortcut!","^1G",false,"^1<","../../../dist/js/compiled/out/klang/core.cljs","^1@",24,"^1H",["^1B",[["^3S"]]],"^1I",null,"^1J",["^1B",[null,null]],"^1>",1,"^1=",411,"^1?",411,"^1K",1,"^1L",true,"^1A",["^1B",["^1C",["^1B",[["^3S"]]]]],"^1E","Installs a Keyboard Shortcut handler that show/hide the log overlay.\n   Call the return function to unregister."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^Q",["^1;","~:frozen-at","~:klang.core/meta-data","~:shortcut-keys","~:logs","~:ns","~:trace","~:time","^1<","~:max-logs","~:msg","~:type","~:env","~:search","~:showing?","^1=","~:id","~:rerender"]],"~:order",["^48","^43","^47","^3[","^3X","^40","^45","^1=","^1;","^42","^1<","^41","^46","^44","^49","^3Z","^4:","^3Y"]],"^1E","\n   # TODO:\n   Also highlight all namespaces with a smart method?\n   For instance all parents vs childs have stronger colors...\n   How to define a tree of colors such that they're similar yet different?\n   Sounds like a coloring problem??\n   Actually sounds more like locality sensitve hashing algorithm!\n   Easiest LSH:\n   Just explode each '.' and project it into some numbers.\n   Actually probably a weighted projection that gives more weights to the\n   leftmost parts of the namespace.\n   What color space to use?\n\n   Note: Some of the code here is written like this to get get 100% DCE'd"]